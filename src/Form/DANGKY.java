/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Form;

import Connection.Connect;
import DAO.DANGKYDAO;
import Model.DangKy;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Acer
 */
public class DANGKY extends javax.swing.JFrame {

    /**
     * Creates new form DANGKY
     */
     DefaultTableModel tbtModel;
    public DANGKY() {
         initComponents();
         setLocationRelativeTo(null);
         initcbbMaLHP();
         initcbbMSSV();
         Loadulieu();
    }

    private void initcbbMaLHP() {
        try {
            String sql = "Select MaLHP from LopHP";
            Connection conn = Connect.openConnect();
            PreparedStatement pm = conn.prepareStatement(sql);
            ResultSet rs = pm.executeQuery();
            cbbMaLHP.removeAllItems();
            while (rs.next()) {
                cbbMaLHP.addItem(rs.getString("MaLHP"));
            }
            rs.close();
            pm.close();
            conn.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
            e.printStackTrace();
        }
    }
    
      private void initcbbMSSV() {
        try {
            String sql = "Select MSSV from SinhVien";
            Connection conn = Connect.openConnect();
            PreparedStatement pm = conn.prepareStatement(sql);
            ResultSet rs = pm.executeQuery();
            cbbMSSV.removeAllItems();
            while (rs.next()) {
                cbbMSSV.addItem(rs.getString("MSSV"));
            }
            rs.close();
            pm.close();
            conn.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
            e.printStackTrace();
        }
    }
    public void Loadulieu() {

        try {
            tbl_dk.removeAll();
            String[] arr = {"MSSV","Mã LHP","Ngày đăng ký"};
            tbtModel = new DefaultTableModel(arr, 0);
            String sql = "SELECT * FROM DangKy";
            Connection conn = Connect.openConnect();
            PreparedStatement pm = conn.prepareStatement(sql);
            ResultSet rs = pm.executeQuery();
            tbtModel.setRowCount(0);
            while (rs.next()) {
                String[] row = new String[]
            {
                    rs.getString("MSSV"), rs.getString("MaLHP"), rs.getString("NgayDk")};
                
                tbtModel.addRow(row);
            }
            tbl_dk.setModel(tbtModel);
            tbtModel.fireTableDataChanged();
            Connect.CloseConnect(conn);
        } catch (Exception e) {
           e.printStackTrace();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_dk = new javax.swing.JTable();
        btnSua = new javax.swing.JButton();
        btnxoa = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        lblDong2 = new javax.swing.JLabel();
        lblDong3 = new javax.swing.JLabel();
        txtNgayDk = new javax.swing.JTextField();
        lblDong6 = new javax.swing.JLabel();
        btt_trove = new javax.swing.JButton();
        cbbMSSV = new javax.swing.JComboBox<>();
        cbbMaLHP = new javax.swing.JComboBox<>();
        btt_thoat1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quản lý đăng ký");

        jLabel1.setFont(new java.awt.Font("#9Slide03 SFU DIN Mittelschrift", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/dangky.png"))); // NOI18N
        jLabel1.setText("ĐĂNG KÝ");

        tbl_dk.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "MSSV", "MaLHP", "Ngày đăng ký"
            }
        ));
        jScrollPane1.setViewportView(tbl_dk);

        btnSua.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/sua.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnxoa.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnxoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/xoa.png"))); // NOI18N
        btnxoa.setText("Xóa");
        btnxoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnxoaActionPerformed(evt);
            }
        });

        btnThem.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/them.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        lblDong2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblDong2.setText("Ngày đăng ký:");

        lblDong3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblDong3.setText("Mã LHP:");

        txtNgayDk.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        lblDong6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblDong6.setText("MSSV:");

        btt_trove.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btt_trove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/back.png"))); // NOI18N
        btt_trove.setText("Trở về");
        btt_trove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btt_troveActionPerformed(evt);
            }
        });

        cbbMSSV.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        cbbMaLHP.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        btt_thoat1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btt_thoat1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/thoat.png"))); // NOI18N
        btt_thoat1.setText("Thoát");
        btt_thoat1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btt_thoat1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblDong6)
                            .addComponent(lblDong3))
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbbMSSV, 0, 117, Short.MAX_VALUE)
                            .addComponent(cbbMaLHP, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNgayDk, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDong2))
                        .addGap(130, 130, 130))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(btnThem)
                        .addGap(37, 37, 37)
                        .addComponent(btnSua)
                        .addGap(51, 51, 51)
                        .addComponent(btnxoa)
                        .addGap(29, 29, 29)
                        .addComponent(btt_trove)
                        .addGap(0, 35, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(256, 256, 256)
                .addComponent(btt_thoat1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 485, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(109, 109, 109))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDong6)
                    .addComponent(lblDong2)
                    .addComponent(cbbMSSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDong3)
                    .addComponent(txtNgayDk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbbMaLHP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSua)
                    .addComponent(btnxoa)
                    .addComponent(btt_trove)
                    .addComponent(btnThem))
                .addGap(42, 42, 42)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btt_thoat1)
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
         StringBuilder sb = new StringBuilder();
          DangKy dk = new DangKy();
            DANGKYDAO dkd = new DANGKYDAO();
        if (cbbMSSV.getSelectedItem().equals("")||cbbMaLHP.getSelectedItem().equals(""))
        {
            sb.append("MSSV hoặc Mã LHP đang trống!\n");
            cbbMSSV.requestFocus();
            cbbMaLHP.requestFocus();
        }
        if (sb.length() > 0) {
            JOptionPane.showMessageDialog(this, sb.toString(), "Cảnh báo", JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
           

            String n1 = cbbMSSV.getItemAt(cbbMSSV.getSelectedIndex());
            dk.setMSSV(n1);
            String n2 = cbbMaLHP.getItemAt(cbbMaLHP.getSelectedIndex());
            dk.setMaLHP(n2);
            dk.setNgayDk((txtNgayDk.getText()));

            dkd.insert(dk);
            Loadulieu();
            JOptionPane.showMessageDialog(this, "Thêm đăng ký thành công!");

        } catch (Exception e) {

            JOptionPane.showMessageDialog(this, "Không thể thêm đăng ký!");
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        StringBuilder sb = new StringBuilder();
         DangKy dk = new DangKy();
            DANGKYDAO dkup = new DANGKYDAO();

         if (cbbMSSV.getSelectedItem().equals("")||cbbMaLHP.getSelectedItem().equals(""))
        {
            sb.append("MSSV hoặc MaLHP đang trống!\n");
            cbbMSSV.requestFocus();
            cbbMaLHP.requestFocus();
        }
        if (sb.length() > 0)
        {
            JOptionPane.showMessageDialog(this, sb.toString(), "Cảnh báo", JOptionPane.ERROR_MESSAGE);
            return;
        }
        try
        {
           
            String n1 = cbbMSSV.getItemAt(cbbMSSV.getSelectedIndex());
            dk.setMSSV(n1);
            String n2 = cbbMaLHP.getItemAt(cbbMaLHP.getSelectedIndex());
            dk.setMaLHP(n2);
            dk.setNgayDk((txtNgayDk.getText()));


            dkup.Update(dk);
            Loadulieu();
            JOptionPane.showMessageDialog(this, "Cập nhật thông tin thành công!");
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "Cập nhật không thành công!");
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnxoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnxoaActionPerformed
        // TODO add your handling code here:
         StringBuilder sb = new StringBuilder();
         if (cbbMSSV.getSelectedItem().equals("")||cbbMaLHP.getSelectedItem().equals(""))
        {
            sb.append("MSSV hoặc MaLHP đang trống!\n");
            cbbMSSV.requestFocus();
            cbbMaLHP.requestFocus();
        }
        if (sb.length() > 0) {
            JOptionPane.showMessageDialog(this, sb.toString(), "Cảnh báo!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int dk = JOptionPane.showConfirmDialog(this, "Bạn muốn xóa lượt đăng ký này", "Thông báo", JOptionPane.YES_NO_OPTION);
        if (dk == JOptionPane.YES_OPTION) {
            try {
                DANGKYDAO dkd = new DANGKYDAO();
                if (dkd.Delete((String)cbbMSSV.getSelectedItem(),(String)cbbMaLHP.getSelectedItem())){
                    JOptionPane.showMessageDialog(this, "Xóa lượt đăng ký thành công");
                } else {
                    JOptionPane.showMessageDialog(this, "Xóa lượt đăng ký thất bại");
                }
                Loadulieu();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_btnxoaActionPerformed

    private void btt_troveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btt_troveActionPerformed
        // TODO add your handling code here:
        TRANGCHU tc = new TRANGCHU();
        tc.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btt_troveActionPerformed

    private void btt_thoat1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btt_thoat1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btt_thoat1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DANGKY.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DANGKY.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DANGKY.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DANGKY.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DANGKY().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnxoa;
    private javax.swing.JButton btt_thoat1;
    private javax.swing.JButton btt_trove;
    private javax.swing.JComboBox<String> cbbMSSV;
    private javax.swing.JComboBox<String> cbbMaLHP;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDong2;
    private javax.swing.JLabel lblDong3;
    private javax.swing.JLabel lblDong6;
    private javax.swing.JTable tbl_dk;
    private javax.swing.JTextField txtNgayDk;
    // End of variables declaration//GEN-END:variables
}
